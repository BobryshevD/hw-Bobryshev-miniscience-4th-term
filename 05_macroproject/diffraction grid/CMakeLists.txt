# This file is automatically generated by running
#
#     cmake/scripts/generate-cmakefiles
#
# Require CMake 3.5
cmake_minimum_required(VERSION 3.5)

set(PROJECT_NAME_1 demo_plane_wave)
set(PROJECT_NAME_2 demo_diffraction_grid)
set(CMAKE_CXX_FLAGS "-O2")

project(${PROJECT_NAME_1})
project(${PROJECT_NAME_2})

# Set CMake behavior
cmake_policy(SET CMP0004 NEW)

# Get DOLFIN configuration data (DOLFINConfig.cmake must be in
# DOLFIN_CMAKE_CONFIG_PATH)
find_package(DOLFIN REQUIRED)

# add gmsh
add_library(gmsh SHARED IMPORTED)
set_target_properties(gmsh PROPERTIES
    IMPORTED_LOCATION "/usr/lib/x86_64-linux-gnu/libgmsh.so"
    INTERFACE_INCLUDE_DIRECTORIES "/usr/include"
)
set(GMSH_LIBRARY gmsh)


include(${DOLFIN_USE_FILE})

# Default build type (can be overridden by user)
if (NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE "RelWithDebInfo" CACHE STRING
      "Choose the type of build, options are: Debug MinSizeRel Release RelWithDebInfo." FORCE)
endif()

# Do not throw error for 'multi-line comments' (these are typical in
# rst which includes LaTeX)
include(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-Wno-comment" HAVE_NO_MULTLINE)
if (HAVE_NO_MULTLINE)
  set(CMAKE_CXX_FLAGS "-Wno-comment ${CMAKE_CXX_FLAGS}")
endif()

# Executable
add_executable(${PROJECT_NAME_1} plane_wave.cpp)
add_executable(${PROJECT_NAME_2} diffraction_grid.cpp)


# Target libraries
target_link_libraries(${PROJECT_NAME_1} dolfin)
target_link_libraries(${PROJECT_NAME_1} ${GMSH_LIBRARY})
target_link_libraries(${PROJECT_NAME_2} dolfin)
target_link_libraries(${PROJECT_NAME_2} ${GMSH_LIBRARY})

# Test targets
set(test_parameters -np 3 ${MPIEXEC_PARAMS} "./${PROJECT_NAME_1}")
add_test(NAME ${PROJECT_NAME_1}_mpi COMMAND "mpirun" ${test_parameters})
add_test(NAME ${PROJECT_NAME_1}_serial COMMAND ${PROJECT_NAME_1})
set(test_parameters -np 3 ${MPIEXEC_PARAMS} "./${PROJECT_NAME_2}")
add_test(NAME ${PROJECT_NAME_2}_mpi COMMAND "mpirun" ${test_parameters})
add_test(NAME ${PROJECT_NAME_2}_serial COMMAND ${PROJECT_NAME_2})
